// Copyright (c) 2021 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
//
// WSO2 Inc. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

import ballerina/log;
import ballerina/lang.runtime;
import ballerina/io;

listener Listener ep35 = new (9125);

@ServiceDescriptor {
    descriptor: ROOT_DESCRIPTOR_35,
    descMap: getDescriptorMap35()
}
service "HelloWorld35" on ep35 {
    
    remote isolated function callWithingDeadline(ContextString request) returns ContextString|Error {
        log:printInfo("Invoked callWithingDeadline");
        var cancel = isCancelled(request.headers);
        if (cancel is boolean) {
            if (cancel) {
                return error DeadlineExceededError("Exceeded the configured deadline");
            } else {
                return {content: "Ack", headers: {}};
            }
        } else {
            return error CancelledError(cancel.message());
        }
    }
    remote isolated function callExceededDeadline(ContextString request) returns ContextString|Error {
        log:printInfo("Invoked callExceededDeadline");
        io:println(request);
        runtime:sleep(10);
        var cancel = isCancelled(request.headers);
        if (cancel is boolean) {
            if (cancel) {
                return error DeadlineExceededError("Exceeded the configured deadline");
            } else {
                return {content: "Ack", headers: {}};
            }
        } else {
            return error CancelledError(cancel.message());
        }
    }
}

const string
isolated function getDescriptorMap35() returns map<string> {
    return {
        "35_unary_service_with_deadline.proto
        "google/protobuf/wrappers.proto

    };
}

