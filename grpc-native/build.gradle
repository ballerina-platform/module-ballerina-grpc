/*
 * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

plugins {
    id 'java'
    id 'checkstyle'
}

description = 'Ballerina - gRPC Java Native'

dependencies {
    checkstyle project(':build-config:checkstyle')
    checkstyle "com.puppycrawl.tools:checkstyle:${checkstylePluginVersion}"

    compile group: 'org.ballerinalang', name: 'ballerina-lang', version: "${ballerinaLangVersion}"
    compile group: 'org.ballerinalang', name: 'ballerina-tools-api', version: "${ballerinaLangVersion}"
    compile group: 'org.ballerinalang', name: 'ballerina-parser', version: "${ballerinaLangVersion}"
    compile group: 'org.ballerinalang', name: 'formatter-core', version: "${ballerinaLangVersion}"
    compile group: 'org.ballerinalang', name: 'ballerina-cli', version: "${ballerinaLangVersion}"
    compile group: 'org.ballerinalang', name: 'ballerina-runtime', version: "${ballerinaLangVersion}"
    compile group: 'org.ballerinalang', name: 'http-native', version: "${stdlibHttpVersion}"
    compile group: 'org.ballerinalang', name: 'ballerina-config', version: "${ballerinaLangVersion}"
    compile group: 'org.slf4j', name: 'slf4j-jdk14', version: "${slf4jVersion}"
    compile group: 'org.apache.commons', name: 'commons-lang3', version: "${commonsLang3Version}"
    compile group: 'com.google.api.grpc', name: 'proto-google-common-protos', version: "${protoGoogleCommonsVersion}"
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: "${protobufJavaVersion}"
    compile group: 'com.github.jknack', name: 'handlebars', version: "${jknackHandlebarsVersion}"
    compile group: 'io.netty', name: 'netty-codec-http', version: "${nettyVersion}"
    compile group: 'info.picocli', name: 'picocli', version: "${picocliVersion}"

    testCompile group: 'org.testng', name: 'testng', version: "${testngVersion}"
}

checkstyle {
    toolVersion "${checkstylePluginVersion}"
    configFile rootProject.file("build-config/checkstyle/build/checkstyle.xml")
    configProperties = ["suppressionFile" : file("${rootDir}/build-config/checkstyle/build/suppressions.xml")]
}

checkstyleMain.dependsOn(":build-config:checkstyle:downloadMultipleFiles")

def excludePattern = '**/module-info.java'
tasks.withType(Checkstyle) {
    exclude excludePattern
}

compileJava {
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}
